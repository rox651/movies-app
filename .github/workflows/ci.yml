name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Install dependencies (cache)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.30
      - name: Install
        run: bun install --frozen-lockfile

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.30
      - name: Install
        run: bun install --frozen-lockfile
      - name: Lint frontend
        run: bun run --cwd frontend lint
      - name: Lint server
        run: bun run --cwd server lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.30
      - name: Install
        run: bun install --frozen-lockfile
      - name: Build frontend
        run: bun run --cwd frontend build
      - name: Build server
        run: bun run --cwd server build

  test-unit:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.30
      - name: Install
        run: bun install --frozen-lockfile
      - name: Test frontend
        run: bun run --cwd frontend test
      - name: Test server
        run: bun run --cwd server test

  e2e:
    name: Frontend E2E
    runs-on: ubuntu-latest
    needs: [build]
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: movies_api
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/movies_api
      PORT: 3000
      VITE_API_URL: http://localhost:3000
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.30
      - name: Install
        run: bun install --frozen-lockfile
      - name: Push DB migrations
        working-directory: server
        run: bun x drizzle-kit push:pg
      - name: Start backend
        run: bun run --cwd server dev &
      - name: Wait for backend
        run: |
          for i in {1..40}; do
            curl -sSf http://localhost:3000/api/media >/dev/null && exit 0
            sleep 2
          done
          echo "Backend did not start in time" && exit 1
      - name: Install Playwright Browsers
        working-directory: frontend
        run: npx playwright install --with-deps
      - name: Run E2E
        working-directory: frontend
        run: bun run e2e:ci
